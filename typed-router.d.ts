/* eslint-disable */
/* prettier-ignore */
// @ts-nocheck
// noinspection ES6UnusedImports
// Generated by unplugin-vue-router. ‼️ DO NOT MODIFY THIS FILE ‼️
// It's recommended to commit this file.
// Make sure to add this file to your tsconfig.json file as an "includes" or "files" entry.

declare module 'vue-router/auto-resolver' {
  export type ParamParserCustom = never
}

declare module 'vue-router/auto-routes' {
  import type {
    RouteRecordInfo,
    ParamValue,
    ParamValueOneOrMore,
    ParamValueZeroOrMore,
    ParamValueZeroOrOne,
  } from 'vue-router'

  /**
   * Route name map generated by unplugin-vue-router
   */
  export interface RouteNamedMap {
    '/': RouteRecordInfo<
      '/',
      '/',
      Record<never, never>,
      Record<never, never>,
      | never
    >,
    '/actor/': RouteRecordInfo<
      '/actor/',
      '/actor',
      Record<never, never>,
      Record<never, never>,
      | never
    >,
    '/actor/[id]': RouteRecordInfo<
      '/actor/[id]',
      '/actor/:id',
      { id: ParamValue<true> },
      { id: ParamValue<false> },
      | never
    >,
    '/config/': RouteRecordInfo<
      '/config/',
      '/config',
      Record<never, never>,
      Record<never, never>,
      | never
    >,
    '/ipni/': RouteRecordInfo<
      '/ipni/',
      '/ipni',
      Record<never, never>,
      Record<never, never>,
      | never
    >,
    '/machines/': RouteRecordInfo<
      '/machines/',
      '/machines',
      Record<never, never>,
      Record<never, never>,
      | never
    >,
    '/machines/[id]': RouteRecordInfo<
      '/machines/[id]',
      '/machines/:id',
      { id: ParamValue<true> },
      { id: ParamValue<false> },
      | never
    >,
    '/market/': RouteRecordInfo<
      '/market/',
      '/market',
      Record<never, never>,
      Record<never, never>,
      | never
    >,
    '/market/asks': RouteRecordInfo<
      '/market/asks',
      '/market/asks',
      Record<never, never>,
      Record<never, never>,
      | never
    >,
    '/market/balance': RouteRecordInfo<
      '/market/balance',
      '/market/balance',
      Record<never, never>,
      Record<never, never>,
      | never
    >,
    '/market/deals': RouteRecordInfo<
      '/market/deals',
      '/market/deals',
      Record<never, never>,
      Record<never, never>,
      | never
    >,
    '/market/settings/': RouteRecordInfo<
      '/market/settings/',
      '/market/settings',
      Record<never, never>,
      Record<never, never>,
      | never
    >,
    '/overview/': RouteRecordInfo<
      '/overview/',
      '/overview',
      Record<never, never>,
      Record<never, never>,
      | never
    >,
    '/pdp/': RouteRecordInfo<
      '/pdp/',
      '/pdp',
      Record<never, never>,
      Record<never, never>,
      | never
    >,
    '/pipeline/': RouteRecordInfo<
      '/pipeline/',
      '/pipeline',
      Record<never, never>,
      Record<never, never>,
      | never
    >,
    '/pipeline/porep': RouteRecordInfo<
      '/pipeline/porep',
      '/pipeline/porep',
      Record<never, never>,
      Record<never, never>,
      | never
    >,
    '/pipeline/snap': RouteRecordInfo<
      '/pipeline/snap',
      '/pipeline/snap',
      Record<never, never>,
      Record<never, never>,
      | never
    >,
    '/sectors/': RouteRecordInfo<
      '/sectors/',
      '/sectors',
      Record<never, never>,
      Record<never, never>,
      | never
    >,
    '/setup': RouteRecordInfo<
      '/setup',
      '/setup',
      Record<never, never>,
      Record<never, never>,
      | never
    >,
    '/storage/': RouteRecordInfo<
      '/storage/',
      '/storage',
      Record<never, never>,
      Record<never, never>,
      | never
    >,
    '/tasks/': RouteRecordInfo<
      '/tasks/',
      '/tasks',
      Record<never, never>,
      Record<never, never>,
      | never
    >,
    '/tasks/active': RouteRecordInfo<
      '/tasks/active',
      '/tasks/active',
      Record<never, never>,
      Record<never, never>,
      | never
    >,
    '/tasks/history': RouteRecordInfo<
      '/tasks/history',
      '/tasks/history',
      Record<never, never>,
      Record<never, never>,
      | never
    >,
    '/tasks/overview': RouteRecordInfo<
      '/tasks/overview',
      '/tasks/overview',
      Record<never, never>,
      Record<never, never>,
      | never
    >,
    '/wallets/': RouteRecordInfo<
      '/wallets/',
      '/wallets',
      Record<never, never>,
      Record<never, never>,
      | never
    >,
  }

  /**
   * Route file to route info map by unplugin-vue-router.
   * Used by the \`sfc-typed-router\` Volar plugin to automatically type \`useRoute()\`.
   *
   * Each key is a file path relative to the project root with 2 properties:
   * - routes: union of route names of the possible routes when in this page (passed to useRoute<...>())
   * - views: names of nested views (can be passed to <RouterView name="...">)
   *
   * @internal
   */
  export interface _RouteFileInfoMap {
    'src/pages/index.vue': {
      routes:
        | '/'
      views:
        | never
    }
    'src/pages/actor/index.vue': {
      routes:
        | '/actor/'
      views:
        | never
    }
    'src/pages/actor/[id].vue': {
      routes:
        | '/actor/[id]'
      views:
        | never
    }
    'src/pages/config/index.vue': {
      routes:
        | '/config/'
      views:
        | never
    }
    'src/pages/ipni/index.vue': {
      routes:
        | '/ipni/'
      views:
        | never
    }
    'src/pages/machines/index.vue': {
      routes:
        | '/machines/'
      views:
        | never
    }
    'src/pages/machines/[id].vue': {
      routes:
        | '/machines/[id]'
      views:
        | never
    }
    'src/pages/market/index.vue': {
      routes:
        | '/market/'
      views:
        | never
    }
    'src/pages/market/asks.vue': {
      routes:
        | '/market/asks'
      views:
        | never
    }
    'src/pages/market/balance.vue': {
      routes:
        | '/market/balance'
      views:
        | never
    }
    'src/pages/market/deals.vue': {
      routes:
        | '/market/deals'
      views:
        | never
    }
    'src/pages/market/settings/index.vue': {
      routes:
        | '/market/settings/'
      views:
        | never
    }
    'src/pages/overview/index.vue': {
      routes:
        | '/overview/'
      views:
        | never
    }
    'src/pages/pdp/index.vue': {
      routes:
        | '/pdp/'
      views:
        | never
    }
    'src/pages/pipeline/index.vue': {
      routes:
        | '/pipeline/'
      views:
        | never
    }
    'src/pages/pipeline/porep.vue': {
      routes:
        | '/pipeline/porep'
      views:
        | never
    }
    'src/pages/pipeline/snap.vue': {
      routes:
        | '/pipeline/snap'
      views:
        | never
    }
    'src/pages/sectors/index.vue': {
      routes:
        | '/sectors/'
      views:
        | never
    }
    'src/pages/setup.vue': {
      routes:
        | '/setup'
      views:
        | never
    }
    'src/pages/storage/index.vue': {
      routes:
        | '/storage/'
      views:
        | never
    }
    'src/pages/tasks/index.vue': {
      routes:
        | '/tasks/'
      views:
        | never
    }
    'src/pages/tasks/active.vue': {
      routes:
        | '/tasks/active'
      views:
        | never
    }
    'src/pages/tasks/history.vue': {
      routes:
        | '/tasks/history'
      views:
        | never
    }
    'src/pages/tasks/overview.vue': {
      routes:
        | '/tasks/overview'
      views:
        | never
    }
    'src/pages/wallets/index.vue': {
      routes:
        | '/wallets/'
      views:
        | never
    }
  }

  /**
   * Get a union of possible route names in a certain route component file.
   * Used by the \`sfc-typed-router\` Volar plugin to automatically type \`useRoute()\`.
   *
   * @internal
   */
  export type _RouteNamesForFilePath<FilePath extends string> =
    _RouteFileInfoMap extends Record<FilePath, infer Info>
      ? Info['routes']
      : keyof RouteNamedMap
}
